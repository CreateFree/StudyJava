package com.ccl.oop;
/**
 * 面向对象介绍
 */
/*
 * 1.Java类及类成员
 * 	属性、方法、构造器；代码块、内部类
 * 2.面向对象的三大特征
 * 	封装、继承、多态、（抽象）
 * 3.其他关键字 ：
 *  this、super、static、final、abstract、interface、package、import...
 *   	
 */

/*
 * 面向过程（POP） 与面向对象（OOP）
 * 例子：“人把大象装进冰箱”
 * 1.面向过程：强调的功能行为，以函数为最小单位，考虑怎么做；
 * 	①把冰箱门打开
 * 	②把大象放进冰箱
 *  ③把冰箱门关闭
 *  
 * 2.面向对象：强调了具备了功能的对象，以类/对象为最小单位，考虑谁来做
 * 	人{
 * 		打开(冰箱){
 * 			冰箱打开();
 * 		}
 * 		抬起(大象){
 * 			大象进入(冰箱);
 * 		}
 * 		关闭(冰箱){
 * 			冰箱关闭();
 * 		}
 *   }
 *   
 *  打开{
 *  	打开(){};
 *  	关闭(){};
 *  }
 *  
 *  大象{
 *  	进入(冰箱){};
 *  }
 * 
 * 
 */

/*
 * 面向对象的两个要素
 * 1.类
 * 2.对象
 * 
 * 设计类其实就是设计类的成员
 *  属性（成员变量）
 *  方法（成员方法）
 * 
 * 
 * 对象的内存解析
 * 	栈(stack)，主要存放局部变量
 *  堆(heap)，主要存放对象实例
 *  方法区，
 * 
 */



/*
 * 属性 VS 局部变量
 * 1.相同点
 * 	1)定义格式相同
 *  2)都是先声明后使用
 *  3)都有其对应的作用域
 *  
 * 2.不同点
 * 	1)声明位置不同
 *  2)局部变量不可以使用权限修饰符
 *  3)属性都有默认初始化值，引用数据类型(类、数组、接口):null。局部变量没有初始化值。
 *  4)在内存中加载的位置
 *    属性：加载在堆空间
 *    局部变量：加载到栈空间
 *  
 */
class UserTest {
	
}

/*
 * 类中方法的声明和使用
 * 
 * 方法：秒速类具备的功能
 * 
 * 
 * 
 */

class Customer {
	
	String name;
	int age;
	boolean isMaile;
	
	public void eat() {
		System.out.println("吃饭");
	}
	public void sleep() {
		System.out.println("睡觉");
	}
	
}


















